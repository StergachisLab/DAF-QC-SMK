import pandas as pd
import os
from snakemake.utils import min_version

min_version("8.0")

include: "rules/common.smk"

REF = get_ref()
MANIFEST = get_manifest()
DUP_END_LENGTH = get_dup_end_length()
MIN_ID_PERC = get_min_id_perc()
CHIMERA_CUTOFF = get_chimera_cutoff()
PLATFORM = get_platform()
CONSENSUS = get_consensus()
CONSENSUS_MIN_READS = get_consensus_min_reads()
MIN_DEAMINATION_COUNT = get_min_deamination_count()
END_TOLERANCE = get_end_tolerance()
DECORATED_SAMPLESIZE = get_decorated_samplesize()

include: "rules/rules.smk"

if PLATFORM == "ont":
    IS_FASTQ = get_is_fastq()
    CONSENSUS = False  # Consensus is not supported for ONT data
    rule all:
        input:
            expand(rules.align_ont.output, sm=MANIFEST.index),
            expand(rules.sequence_qc.output, sm=MANIFEST.index, type="reads"),
            get_strand_qc_plot_paths(),
            expand(rules.targeting_qc.output, sm=MANIFEST.index),
            expand(rules.plot_targeting_qc.output, sm=MANIFEST.index, type="reads"),
            expand(rules.decorate_strands.output, sm=MANIFEST.index),
            expand(rules.index_decorated.output, sm=MANIFEST.index),
            expand(rules.make_dashboard.output, sm=MANIFEST.index)
elif CONSENSUS is False:
    rule all:
        input:
            expand(rules.align.output, sm=MANIFEST.index, type="reads"),
            expand(rules.sequence_qc.output, sm=MANIFEST.index, type="reads"),
            get_strand_qc_plot_paths(),
            expand(rules.targeting_qc.output, sm=MANIFEST.index),
            expand(rules.plot_targeting_qc.output, sm=MANIFEST.index, type="reads"),
            expand(rules.decorate_strands.output, sm=MANIFEST.index),
            expand(rules.index_decorated.output, sm=MANIFEST.index),
            expand(rules.deduplication_metrics.output, sm=MANIFEST.index),
            get_deduplication_qc_plot_paths(),
            expand(rules.make_dashboard.output, sm=MANIFEST.index)
else:
    rule all:
        input:
            expand(rules.align.output, sm=MANIFEST.index, type=["reads", "consensus"]),
            expand(rules.sequence_qc.output, sm=MANIFEST.index, type=["reads", "consensus"]),
            get_strand_qc_plot_paths(),
            expand(rules.targeting_qc.output, sm=MANIFEST.index),
            expand(rules.plot_targeting_qc.output, sm=MANIFEST.index),
            expand(rules.decorate_strands.output, sm=MANIFEST.index),
            expand(rules.index_decorated.output, sm=MANIFEST.index),
            expand(rules.deduplication_metrics.output, sm=MANIFEST.index),
            get_deduplication_qc_plot_paths(),
            expand(rules.make_dashboard.output, sm=MANIFEST.index)